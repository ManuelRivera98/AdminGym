# Generated by Django 3.0 on 2020-09-03 17:50

import django.core.validators
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Client',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified.', verbose_name='Updated at')),
                ('first_name', models.CharField(max_length=10)),
                ('last_name', models.CharField(max_length=10)),
                ('phone_number', models.CharField(blank=True, max_length=17, null=True, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: +999999999. Up to is digits allowed.', regex='\\+?1?\\d{9,15}$')])),
                ('email', models.EmailField(error_messages={'unique': 'A user with that email already exits.'}, max_length=254, unique=True, verbose_name='email address')),
                ('cc', models.CharField(help_text='Unique National Identity Document', max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Identification number must be of type 1,000,000,000', regex='\\d{8,10}$')])),
                ('c_memberships', models.PositiveIntegerField(default=0, help_text='Number of times the membership has been paid')),
                ('is_active', models.BooleanField(default=False, help_text='Handle in case of membership expiration')),
            ],
            options={
                'ordering': ['created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Gym',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date time on which the object was created.', verbose_name='created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date time on which the object was last modified.', verbose_name='Updated at')),
                ('name', models.CharField(max_length=30)),
                ('slug_name', models.CharField(max_length=10, unique=True, validators=[django.core.validators.RegexValidator(message='Can not have spaces.', regex='^[a-zA-Z0-9]')])),
                ('monthly_price', models.PositiveIntegerField(default=0)),
                ('direction', models.CharField(blank=True, max_length=20, null=True)),
                ('phone_number', models.CharField(max_length=17, unique=True, validators=[django.core.validators.RegexValidator(message='Phone number must be entered in the format: +999999999. Up to is digits allowed.', regex='\\+?1?\\d{9,15}$')])),
                ('c_memberships', models.PositiveIntegerField(default=0, help_text='Gym Membership Counter', verbose_name='counter memberships')),
                ('is_active', models.BooleanField(default=False, help_text='Manage status when deleting a gym object')),
                ('is_official', models.BooleanField(default=False)),
            ],
            options={
                'ordering': ['created_at', '-updated_at'],
                'get_latest_by': 'created_at',
                'abstract': False,
            },
        ),
    ]
